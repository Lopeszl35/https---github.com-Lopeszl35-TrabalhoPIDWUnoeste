backend/
├── controllers/                 # Controladores para gerenciar requisições HTTP
│   ├── abstrato/                # Classes abstratas de controllers
│   │   ├── AbstractPacienteController.js
│   │   ├── AbstractProfissionalController.js
│   │   ├── AbstractServicoController.js
│   │   ├── AbstractAgendamentoController.js
│   │   ├── AbstractEnderecoController.js
│   │   └── AbstractResponsavelController.js
│   ├── PacienteController.js
│   ├── ProfissionalController.js
│   ├── ServicoController.js
│   ├── AgendamentoController.js
│   ├── EnderecoController.js
│   ├── ResponsavelController.js
│   └── UsuarioController.js      # Controlador para login e autenticação
├── model/                       # Modelos e configuração do banco de dados
│   ├── database.js              # Configuração da conexão com o banco de dados
│   ├── Paciente.js
│   ├── Profissional.js
│   ├── Servico.js
│   ├── Agendamento.js
│   ├── Endereco.js
│   ├── Responsavel.js
│   └── Usuario.js               # Modelo para usuários (autenticação)
├── services/                    # Lógica de negócio e acesso aos repositórios
│   ├── abstrato/                # Classes abstratas para serviços
│   │   ├── AbstractPacienteService.js
│   │   ├── AbstractProfissionalService.js
│   │   ├── AbstractServicoService.js
│   │   ├── AbstractAgendamentoService.js
│   │   ├── AbstractEnderecoService.js
│   │   └── AbstractResponsavelService.js
         └── AbstractUsuarioService.js
│   ├── PacienteService.js
│   ├── ProfissionalService.js
│   ├── ServicoService.js
│   ├── AgendamentoService.js
│   ├── EnderecoService.js
│   ├── ResponsavelService.js
│   └── UsuarioService.js        # Serviço para autenticação e autorização (JWT)
├── repositories/                # Repositórios para acesso direto ao banco de dados
│   ├── abstrato/                # Classes abstratas para repositórios
│   │   ├── AbstractPacienteRepository.js
│   │   ├── AbstractProfissionalRepository.js
│   │   ├── AbstractServicoRepository.js
│   │   ├── AbstractAgendamentoRepository.js
│   │   ├── AbstractEnderecoRepository.js
│   │   └── AbstractResponsavelRepository.js
│   ├── PacienteRepository.js
│   ├── ProfissionalRepository.js
│   ├── ServicoRepository.js
│   ├── AgendamentoRepository.js
│   ├── EnderecoRepository.js
│   ├── ResponsavelRepository.js
│   └── UsuarioRepository.js      # Repositório para operações de autenticação
├── routes/                      # Definição das rotas da API
│   ├── pacienteRoutes.js
│   ├── profissionalRoutes.js
│   ├── servicoRoutes.js
│   ├── agendamentoRoutes.js
│   ├── enderecoRoutes.js
│   ├── responsavelRoutes.js
│   └── usuarioRoutes.js         # Rotas para autenticação e autorização
├── utils/                       # Utilitários e ferramentas auxiliares
│   ├── DependencyInjector.js    # Sistema de injeção de dependências
│   ├── validators.js            # Arquivo para validações comuns
│   └── authMiddleware.js        # Middleware de autenticação para JWT
├── middleware/                  # Middlewares para validação e autenticação
│   └── jwtMiddleware.js         # Middleware para verificar e autenticar JWT
└── server.js                    # Arquivo principal para iniciar o servidor
